!YS-v0

defn score(dice category):
  dice-set =: dice:distinct:sort
  counts =: dice:frequencies
  counts2 =: counts:set/map-invert
  case category:
    'full house': (counts2.2 && counts2.3).if(dice:sum 0)
    'little straight': dice-set.eq([1 2 3 4 5]).if(30 0)
    'big straight'   : dice-set.eq([2 3 4 5 6]).if(30 0)
    'four of a kind' : counts2(4 counts2(5 0)) * 4
    'yacht' : dice-set.#.eq(1).if(50 0)
    'choice': dice:sum
    else:
      nums =: qw(ones twos threes fours fives sixes)
      num =: nums.take-while(ne(category)).#.++
      mul num: counts(num 0)
