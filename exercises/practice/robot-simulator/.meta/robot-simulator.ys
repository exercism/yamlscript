!YS-v0

dirs =: qw(north east south west)
next =: dirs.zipmap(dirs:cycle:rest)

dir =::
  north :: \(update _ 'y' inc)
  east  :: \(update _ 'x' inc)
  south :: \(update _ 'y' dec)
  west  :: \(update _ 'x' dec)

defn create(position direction): +
  {'position' position 'direction' direction}

defn move(position direction instructions):
  reduce _ create(position direction) instructions:
    fn(robot command):
      case command:
        \\A: update(robot 'position'  dir(robot.direction))
        \\R: update(robot 'direction' next)
        \\L: update(robot 'direction' set/map-invert(next))
