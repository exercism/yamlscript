#!/usr/bin/env ys-0

require ys::taptest: :all

use: perfect-numbers

test::
- name: Smallest perfect number is classified correctly
  code: classify(6)
  want: perfect
  uuid: 163e8e86-7bfd-4ee2-bd68-d083dc3381a3

- name: Medium perfect number is classified correctly
  code: classify(28)
  want: perfect
  uuid: 169a7854-0431-4ae0-9815-c3b6d967436d

- name: Large perfect number is classified correctly
  code: classify(33550336)
  want: perfect
  uuid: ee3627c4-7b36-4245-ba7c-8727d585f402
  SKIP: true   # SLOW

- name: Smallest abundant number is classified correctly
  code: classify(12)
  want: abundant
  uuid: 80ef7cf8-9ea8-49b9-8b2d-d9cb3db3ed7e

- name: Medium abundant number is classified correctly
  code: classify(30)
  want: abundant
  uuid: 3e300e0d-1a12-4f11-8c48-d1027165ab60

- name: Large abundant number is classified correctly
  code: classify(33550335)
  want: abundant
  uuid: ec7792e6-8786-449c-b005-ce6dd89a772b
  SKIP: true   # SLOW

- name: Smallest prime deficient number is classified correctly
  code: classify(2)
  want: deficient
  uuid: e610fdc7-2b6e-43c3-a51c-b70fb37413ba

- name: Smallest non-prime deficient number is classified correctly
  code: classify(4)
  want: deficient
  uuid: 0beb7f66-753a-443f-8075-ad7fbd9018f3

- name: Medium deficient number is classified correctly
  code: classify(32)
  want: deficient
  uuid: 1c802e45-b4c6-4962-93d7-1cad245821ef

- name: Large deficient number is classified correctly
  code: classify(33550337)
  want: deficient
  uuid: 47dd569f-9e5a-4a11-9a47-a4e91c8c28aa
  SKIP: true   # SLOW

- name: Edge case (no factors other than itself) is classified correctly
  code: classify(1)
  want: deficient
  uuid: a696dec8-6147-4d68-afad-d38de5476a56

- name: Zero is rejected (as it is not a positive integer)
  code: classify(0)
  what: error
  want: Classification is only possible for positive integers.
  uuid: 72445cee-660c-4d75-8506-6c40089dc302

- name: Negative integer is rejected (as it is not a positive integer)
  code: classify(-1)
  what: error
  want: Classification is only possible for positive integers.
  uuid: 2d72ce2c-6802-49ac-8ece-c790ba3dae13

done: 10 # 13
